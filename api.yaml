swagger: "2.0"
info:
  description: "This is API Documentation for Tresor App"
  version: "1.0.0"
  title: "Tresor API"
host: "tresor.website"
schemes:
  - "https"
consumes:
  - application/json
  - application/x-www-form-urlencoded
produces:
  - application/json
tags:
  - name: credential
paths:
  /users:
    post:
      tags: 
        - credential
      summary: Create new user
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Credential"
      responses:
        204:
          description: "user created"
  /sessions:
    post:
      tags:
        - credential
      summary: Login user
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Credential"
      responses:
        200:
          description: Successfully get token
          schema:
            $ref: "#/definitions/Token"
        401:
          description: email/password wrong
          schema:
            type: object
            properties:
              message:
                type: string
  /spendings/:
    post:
      tags:
        - spendings
      summary: create spending
      operationId: createSpending
      parameters:
        - in: body
          name: spending
          required: true
          schema:
            $ref: "#/definitions/Spending"
      responses:
        200:
          description: Successfully create spending
          schema:
            $ref: "#/definitions/Spending"
    get:
      tags:
        - spendings
      summary: get list spendings  
      operationId: getSpendingList
      parameters:
        - name: dateStart
          description: start date filter
          in: query
          type: string
        - name: dateEnd
          description: end date filter
          in: query
          type: string
        - name: page
          description: page filter
          in: query
          type: integer
        - name: tags
          description: tags filter
          in: query
          type: array
          items:
            type: string
      responses:
        200:
          description: Sucessfully get spendings
          schema:
            type: object
            properties:
              count: 
                type: integer
              data:
                type: array
                items:
                  $ref: "#/definitions/Spending"
  /spendings/{spendingId}:
    patch:
      tags: 
        - spendings
      summary: Update Spending
      operationId: updateSpending
      parameters:
        - in: path
          required: true
          name: spendingId
          type: integer
        - in: body
          name: spending
          required: true
          schema:
            $ref: "#/definitions/Spending"
      responses:
        200:
          description: Sucessfully update Spending
          schema:
            $ref: "#/definitions/Spending"
  /tags:
    get:
      tags:
        - tags
      summary: search tags
      operationId: searchTag
      parameters:
        - name: q
          description: string to be query
          in: query
          type: string
        - name: sort
          description: short query result (name[default], count)
          in: query
          type: string
          enum:
            - "count"
            - "name"
        - name: dateStart
          description: date start of stat
          in: query
          type: string
        - name: dateEnd
          description: date end of stat
          in: query
          type: string
      responses:
        200:
          description: Success get list of tags
          schema:
            type: object
            properties:
              count:
                type: integer
              data:
                type: array
                items:
                  type: object
                  properties:
                    tag:
                      type: string
                    count:
                      type: integer
                    amount:
                      type: integer
  /spendings/stats/days:
    get:
      tags:
        - spendings
      summary: get stats for spendings per day
      operationId: statsByDays
      parameters:
        - name: dateStart
          description: date start of stat
          in: query
          type: string
        - name: dateEnd
          description: date end of stat
          in: query
          type: string     
      responses:
        200:
          description: Success get stats per day
          schema:
            type: array
            items:
              $ref: "#/definitions/Tags"
definitions:
  Credential:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  Spending:
    type: object
    properties:
      id:
        description: not required for create
        type: integer
      amount:
        type: number
      tags:
        type: array
        items: 
          type: string
      date:
        type: string
      info:
        type: string
      category:
        type: string
  Tags:
    type: object
    properties:
      date: 
        type: string
      amount:
        type: number
      count:
        type: integer
